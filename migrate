#!/bin/sh

error () {
    echo $* 1>&2
}

# check for migrations subdirectory in current directory
if [ ! -d "migrations" ]; then
    error "ERROR: Directory 'migrations' not found.\nDid you initialize migrations for this project?"
    exit 1
fi

# check for configuration file named 'config' in migrations directory
if [ ! -f "migrations/config" ]; then
    error "ERROR: Configuration 'migrations/config' not found."
    error "Please add the configuration file named 'config' to the migrations directory"
    exit 1
fi

# TODO: hmm, is there a better way to read configs in bash? when there is
# something wrong in the config file (syntax error perhaps) that can lead to
# the migrate script crashing...
. migrations/config

# check for required configuration settings
if [ -z "$db_host" ]; then
    error "ERROR: Missing required configuration setting 'db_host' in 'migrations/config'."
    error "Please specify the hostname migrate should connect to in the config file"
    exit 1
fi
if [ -z "$db_user" ]; then
    error "ERROR: Missing required configuration setting 'db_user' in 'migrations/config'."
    error "Please specify the user migrate should use to connect to the database in the config file"
    exit 1
fi
if [ -z "$db_password" ]; then
    error "ERROR: Missing required configuration setting 'db_password' in 'migrations/config'."
    error "Please specify the password migrate should use to connect to the database in the config file"
    exit 1
fi
if [ -z "$db_name" ]; then
    error "ERROR: Missing required configuration setting 'db_name' in 'migrations/config'."
    error "Please specify the database name migrate should connect to in the config file"
    exit 1
fi


echo "SUCCESS"
